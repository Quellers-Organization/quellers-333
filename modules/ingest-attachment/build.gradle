import org.elasticsearch.gradle.internal.info.BuildParams

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.internal-yaml-rest-test'
apply plugin: 'elasticsearch.yaml-rest-compat-test'

esplugin {
  description 'Ingest processor that uses Apache Tika to extract contents'
  classname 'org.elasticsearch.ingest.attachment.IngestAttachmentPlugin'
}

// this overwrites the 'versions' map from Elasticsearch itself, but indeed we want that -- we're interested in managing our dependencies
// as we (and tika) demand, and are not interested in, say, having the same version of commons-codec as elasticsearch itself
// when updating tika, please review it's parent pom : https://repo1.maven.org/maven2/org/apache/tika/tika-parent
// and manually update the transitive dependencies here
def versions = [
  'tika'  : '2.9.2',
  'pdfbox': '2.0.31',
  'poi'   : '5.2.5',
  'sparsebitset' : '1.3', //poi dependency: https://repo1.maven.org/maven2/org/apache/poi/poi/
  'mime4j': '0.8.11',
  'commonsCodec': '1.16.1',
  'slf4' : '2.0.10',
  'xz' : '1.9',
  'commonsIo' : '2.15.1',
  //intentionally using the elder "juniversalchardet:juniversalchardet" rather than the newer "com.github.albfernandez:juniversalchardet"
  //since the "com.github.albfernandez" fork has some problems with Chinese.
  'juniversalchardet' : '1.0.3',
  'tagsoup' : '1.2.1',
  'jempbox' : '1.8.17',
  'xmlbeans' : '5.2.0', //poi-ooxml dependency: https://repo1.maven.org/maven2/org/apache/poi/poi-ooxml/
  'commonsCollections4' : '4.4',
  'commonsCompress' : '1.26.1',
  'commonsLang3' :'3.14.0',
  'commonsMath3' : '3.6.1'
]

// exclude commons-logging from test dependencies to avoid jar-hell, we use jcl-over-slf4j here
configurations.testRuntimeClasspath {
  exclude module: 'commons-logging'
  // The version used by POI potentially conflicts with the one pulled in by :test:framework:
  resolutionStrategy.force "commons-codec:commons-codec:${versions.commonsCodec}"
}

configurations.testCompileClasspath {
  // The version used by POI potentially conflicts with the one pulled in by :test:framework:
  resolutionStrategy.force "commons-codec:commons-codec:${versions.commonsCodec}"
}

dependencies {
  // take over logging for all dependencies
  api tikaLibs.slf4j.api
  api tikaLibs.jcl.over.slf4j

  // route slf4j over log4j
  // TODO blocked on https://github.com/elastic/elasticsearch/issues/93714
  // api "org.apache.logging.log4j:log4j-slf4j2-impl:2.19.0"

  // nop all slf4j logging
  // workaround for https://github.com/elastic/elasticsearch/issues/93714
  api tikaLibs.slf4j.nop

  // mandatory for tika
  api tikaLibs.tika.core
  api tikaLibs.tika.langdetect
  api tikaLibs.tika.langdetect.tika
  api tikaLibs.tika.parser.html.module
  api tikaLibs.tika.parser.microsoft.module
  api tikaLibs.tika.parser.pdf.module
  api tikaLibs.tika.parser.xml.module
  api tikaLibs.tika.parser.text.module
  api tikaLibs.tika.parser.miscoffice.module
  api tikaLibs.tika.parser.apple.module
  api tikaLibs.tika.parser.xmp.commons
  api tikaLibs.tika.parser.zip.commons
  api tikaLibs.xz
  api tikaLibs.commons.io

  // character set detection
  api tikaLibs.juniversalchardet

  // external parser libraries
  // HTML
  api tikaLibs.tagsoup
  // Adobe PDF
  api tikaLibs.pdfbox
  api tikaLibs.fontbox
  api tikaLibs.jempbox
  // OpenOffice
  api tikaLibs.poi.ooxml
  api tikaLibs.poi.ooxml.lite
  api tikaLibs.poi
  api tikaLibs.commons.codec
  api tikaLibs.xmlbeans
  api tikaLibs.commons.collections4
  // MS Office
  api tikaLibs.poi.scratchpad
  // Apple iWork
  api tikaLibs.commons.compress
  // Outlook documents
  api tikaLibs.apache.mime4j.core
  api tikaLibs.apache.mime4j.dom

  // EPUB books
  api tikaLibs.commons.lang3
  // Microsoft Word files with visio diagrams
  api tikaLibs.commons.math3
  // POIs dependency
  api tikaLibs.sparsebitset
}

restResources {
  restApi {
    include '_common', 'cluster', 'nodes', 'ingest', 'index', 'get'
  }
}

tasks.named("dependencyLicenses").configure {
  mapping from: /apache-mime4j-.*/, to: 'apache-mime4j'
  mapping from: /tika-langdetect-.*/, to: 'tika-langdetect'
}

esplugin.bundleSpec.from('config/ingest-attachment') {
  into 'config'
}

tasks.named("forbiddenPatterns").configure {
  exclude '**/*.doc'
  exclude '**/*.docx'
  exclude '**/*.pdf'
  exclude '**/*.epub'
  exclude '**/*.vsdx'
  exclude '**/text-cjk-*.txt'
}

tasks.named("yamlRestTestV7CompatTransform").configure { task ->
  // 2 new tika metadata fields are returned in v8
  task.replaceValueInLength("_source.attachment", 8, "Test ingest attachment processor with .doc file")
  task.replaceValueInLength("_source.attachment", 8, "Test ingest attachment processor with .docx file")
  // Tika 2.4.0 adds an extra newline for each embedded attachment, making the content_length larger
  task.replaceValueInMatch("_source.attachment.content_length", 20, "Test ingest attachment processor with .docx file")
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses()
}

if (BuildParams.inFipsJvm) {
  tasks.named("test").configure { enabled = false }
  tasks.named("yamlRestTest").configure { enabled = false };
  tasks.named("yamlRestTestV7CompatTest").configure { enabled = false };
}
