setup:
  - requires:
      cluster_features: "gte_v8.15.0"
      reason: semantic reranking introduced in 8.15.0

  - do:
      inference.put:
        task_type: rerank
        inference_id: my-rerank-model
        body: >
          {
            "service": "test_reranking_service",
            "service_settings": {
              "model_id": "my_model",
              "api_key": "abc64"
            },
            "task_settings": {
            }
          }

  - do:
      indices.create:
        index: test-index
        body:
          mappings:
            properties:
              text:
                type: text
              topic:
                type: keyword

  - do:
      index:
        index: test-index
        id: doc_1
        body:
          text: "Tomorrow will take us away far from home. No one will ever know our names. But the bards' songs will remain"
          topic: ["music"]
        refresh: true

  - do:
      index:
        index: test-index
        id: doc_2
        body:
          text: "Tomorrow all will be known and you're not alone. So don't be afraid in the dark and cold. 'Cause the bards' songs will remain they all will remain"
          topic: ["music", "epic"]
        refresh: true

---
"Simple text similarity rank retriever":

  - do:
      search:
        index: test-index
        body:
          track_total_hits: true
          fields: [ "text", "topic" ]
          retriever:
            text_similarity_reranker:
              retriever:
                standard:
                  query:
                    term:
                      topic: "music"
              rank_window_size: 10
              inference_id: my-rerank-model
              inference_text: "are these lyrics of a Blind Guardian song?"
              field: text
          size: 10

  - match: { hits.total.value : 2 }
  - length: { hits.hits: 2 }

  - match: { hits.hits.0._id: "doc_2" }
  - match: { hits.hits.0._rank: 1 }
  - match: { hits.hits.0._score: 0.4 }

  - match: { hits.hits.1._id: "doc_1" }
  - match: { hits.hits.1._rank: 2 }
  - match: { hits.hits.1._score: 0.2 }
