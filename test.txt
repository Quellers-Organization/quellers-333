diff --git a/server/src/main/java/org/elasticsearch/tasks/TaskCancellationService.java b/server/src/main/java/org/elasticsearch/tasks/TaskCancellationService.java
index 419f2d07268..37470a94b33 100644
--- a/server/src/main/java/org/elasticsearch/tasks/TaskCancellationService.java
+++ b/server/src/main/java/org/elasticsearch/tasks/TaskCancellationService.java
@@ -47,7 +47,9 @@ import static org.elasticsearch.core.Strings.format;
 
 public class TaskCancellationService {
     public static final String BAN_PARENT_ACTION_NAME = "internal:admin/tasks/ban";
+    public static final String REMOTE_CLUSTER_BAN_PARENT_ACTION_NAME = "cluster:internal/admin/tasks/ban";
     public static final String CANCEL_CHILD_ACTION_NAME = "internal:admin/tasks/cancel_child";
+    public static final String REMOTE_CLUSTER_CANCEL_CHILD_ACTION_NAME = "cluster:internal/admin/tasks/cancel_child";
     public static final TransportVersion VERSION_SUPPORTING_CANCEL_CHILD_ACTION = TransportVersions.V_8_8_0;
     private static final Logger logger = LogManager.getLogger(TaskCancellationService.class);
     private final TransportService transportService;
diff --git a/server/src/main/java/org/elasticsearch/transport/RemoteConnectionManager.java b/server/src/main/java/org/elasticsearch/transport/RemoteConnectionManager.java
index dfaf3a6fa5c..eea9036c969 100644
--- a/server/src/main/java/org/elasticsearch/transport/RemoteConnectionManager.java
+++ b/server/src/main/java/org/elasticsearch/transport/RemoteConnectionManager.java
@@ -16,6 +16,7 @@ import org.elasticsearch.common.settings.SecureString;
 import org.elasticsearch.common.util.CollectionUtils;
 import org.elasticsearch.core.Nullable;
 import org.elasticsearch.core.Releasable;
+import org.elasticsearch.tasks.TaskCancellationService;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -346,9 +347,27 @@ public class RemoteConnectionManager implements ConnectionManager {
         public void sendRequest(long requestId, String action, TransportRequest request, TransportRequestOptions options)
             throws IOException, TransportException {
             final String effectiveAction;
-            if (clusterCredentials != null && TransportService.HANDSHAKE_ACTION_NAME.equals(action)) {
-                logger.trace("sending remote cluster specific handshake to node [{}] of remote cluster [{}]", getNode(), clusterAlias);
-                effectiveAction = REMOTE_CLUSTER_HANDSHAKE_ACTION_NAME;
+            if (clusterCredentials != null) {
+                if (TransportService.HANDSHAKE_ACTION_NAME.equals(action)) {
+                    logger.trace("sending remote cluster specific handshake to node [{}] of remote cluster [{}]", getNode(), clusterAlias);
+                    effectiveAction = REMOTE_CLUSTER_HANDSHAKE_ACTION_NAME;
+                } else if (TaskCancellationService.BAN_PARENT_ACTION_NAME.equals(action)) {
+                    logger.trace(
+                        "sending remote cluster specific task ban parent to node [{}] of remote cluster [{}]",
+                        getNode(),
+                        clusterAlias
+                    );
+                    effectiveAction = TaskCancellationService.REMOTE_CLUSTER_BAN_PARENT_ACTION_NAME;
+                } else if (TaskCancellationService.CANCEL_CHILD_ACTION_NAME.equals(action)) {
+                    logger.trace(
+                        "sending remote cluster specific task cancel child to node [{}] of remote cluster [{}]",
+                        getNode(),
+                        clusterAlias
+                    );
+                    effectiveAction = TaskCancellationService.REMOTE_CLUSTER_CANCEL_CHILD_ACTION_NAME;
+                } else {
+                    effectiveAction = action;
+                }
             } else {
                 effectiveAction = action;
             }
diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java
index 37cf09bc460..9eebdd59308 100644
--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java
+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationField.java
@@ -38,6 +38,7 @@ public final class AuthenticationField {
     public static final String CROSS_CLUSTER_ACCESS_REALM_TYPE = "_es_cross_cluster_access";
     public static final String CROSS_CLUSTER_ACCESS_AUTHENTICATION_KEY = "_security_cross_cluster_access_authentication";
     public static final String CROSS_CLUSTER_ACCESS_ROLE_DESCRIPTORS_KEY = "_security_cross_cluster_access_role_descriptors";
+    public static final String CROSS_CLUSTER_ACCESS_EFFECTIVE_SUBJECT_KEY = "_security_cross_cluster_access_effective_subject";
 
     private AuthenticationField() {}
 }
diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/CrossClusterAccessSubjectInfo.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/CrossClusterAccessSubjectInfo.java
index 82bfc4b4a0d..d257519d810 100644
--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/CrossClusterAccessSubjectInfo.java
+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/CrossClusterAccessSubjectInfo.java
@@ -187,6 +187,7 @@ public final class CrossClusterAccessSubjectInfo {
         final Map<String, Object> copy = new HashMap<>(authenticationMetadata);
         copy.put(AuthenticationField.CROSS_CLUSTER_ACCESS_AUTHENTICATION_KEY, getAuthentication());
         copy.put(AuthenticationField.CROSS_CLUSTER_ACCESS_ROLE_DESCRIPTORS_KEY, getRoleDescriptorsBytesList());
+//        copy.put(AuthenticationField.CROSS_CLUSTER_ACCESS_EFFECTIVE_SUBJECT_KEY, getRoleDescriptorsBytesList());
         return Collections.unmodifiableMap(copy);
     }
 
diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilegeResolver.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilegeResolver.java
index 7f927d45a23..e495a652aff 100644
--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilegeResolver.java
+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilegeResolver.java
@@ -24,6 +24,7 @@ import org.elasticsearch.action.ingest.SimulatePipelineAction;
 import org.elasticsearch.common.Strings;
 import org.elasticsearch.common.util.Maps;
 import org.elasticsearch.core.Nullable;
+import org.elasticsearch.tasks.TaskCancellationService;
 import org.elasticsearch.transport.RemoteClusterService;
 import org.elasticsearch.transport.TransportRequest;
 import org.elasticsearch.xpack.core.action.XPackInfoAction;
@@ -182,6 +183,8 @@ public class ClusterPrivilegeResolver {
 
     private static final Set<String> CROSS_CLUSTER_SEARCH_PATTERN = Set.of(
         RemoteClusterService.REMOTE_CLUSTER_HANDSHAKE_ACTION_NAME,
+        TaskCancellationService.REMOTE_CLUSTER_BAN_PARENT_ACTION_NAME,
+        TaskCancellationService.REMOTE_CLUSTER_CANCEL_CHILD_ACTION_NAME,
         RemoteClusterNodesAction.TYPE.name(),
         XPackInfoAction.NAME,
         // esql enrich
@@ -191,6 +194,8 @@ public class ClusterPrivilegeResolver {
     );
     private static final Set<String> CROSS_CLUSTER_REPLICATION_PATTERN = Set.of(
         RemoteClusterService.REMOTE_CLUSTER_HANDSHAKE_ACTION_NAME,
+        TaskCancellationService.REMOTE_CLUSTER_BAN_PARENT_ACTION_NAME,
+        TaskCancellationService.REMOTE_CLUSTER_CANCEL_CHILD_ACTION_NAME,
         RemoteClusterNodesAction.TYPE.name(),
         XPackInfoAction.NAME,
         ClusterStateAction.NAME
diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/user/SystemUser.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/user/SystemUser.java
index a1b141d0aa0..47c598e934a 100644
--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/user/SystemUser.java
+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/user/SystemUser.java
@@ -8,6 +8,7 @@ package org.elasticsearch.xpack.core.security.user;
 
 import org.elasticsearch.TransportVersion;
 import org.elasticsearch.xpack.core.security.authc.Authentication;
+import org.elasticsearch.xpack.core.security.authc.AuthenticationField;
 import org.elasticsearch.xpack.core.security.authc.CrossClusterAccessSubjectInfo;
 import org.elasticsearch.xpack.core.security.authc.Subject;
 import org.elasticsearch.xpack.core.security.authz.RoleDescriptor;
@@ -75,6 +76,12 @@ public class SystemUser extends InternalUser {
         return InternalUsers.SYSTEM_USER.equals(user);
     }
 
+    public static boolean isFromQueryingCluster(Subject subject) {
+        var authenticationFromQueryingCluster = subject.getMetadata().get(AuthenticationField.CROSS_CLUSTER_ACCESS_AUTHENTICATION_KEY);
+        return authenticationFromQueryingCluster instanceof Authentication authentication
+            && InternalUsers.SYSTEM_USER.equals(authentication.getEffectiveSubject().getUser());
+    }
+
     public static boolean isAuthorized(String action) {
         return PREDICATE.test(action);
     }
diff --git a/x-pack/plugin/security/qa/multi-cluster/src/javaRestTest/java/org/elasticsearch/xpack/remotecluster/RemoteClusterSecurityRestIT.java b/x-pack/plugin/security/qa/multi-cluster/src/javaRestTest/java/org/elasticsearch/xpack/remotecluster/RemoteClusterSecurityRestIT.java
index 8affc359efb..5bb3d1897e5 100644
--- a/x-pack/plugin/security/qa/multi-cluster/src/javaRestTest/java/org/elasticsearch/xpack/remotecluster/RemoteClusterSecurityRestIT.java
+++ b/x-pack/plugin/security/qa/multi-cluster/src/javaRestTest/java/org/elasticsearch/xpack/remotecluster/RemoteClusterSecurityRestIT.java
@@ -7,8 +7,11 @@
 
 package org.elasticsearch.xpack.remotecluster;
 
+import com.carrotsearch.randomizedtesting.annotations.TimeoutSuite;
+import org.apache.http.client.config.RequestConfig;
 import org.apache.http.util.EntityUtils;
 import org.apache.logging.log4j.Level;
+import org.apache.lucene.tests.util.TimeUnits;
 import org.elasticsearch.Build;
 import org.elasticsearch.action.search.SearchResponse;
 import org.elasticsearch.client.Request;
@@ -54,6 +57,7 @@ import static org.hamcrest.Matchers.not;
 import static org.hamcrest.Matchers.notNullValue;
 import static org.hamcrest.Matchers.nullValue;
 
+@TimeoutSuite(millis = 30 * TimeUnits.HOUR)
 public class RemoteClusterSecurityRestIT extends AbstractRemoteClusterSecurityTestCase {
 
     private static final AtomicReference<Map<String, Object>> API_KEY_MAP_REF = new AtomicReference<>();
@@ -158,6 +162,11 @@ public class RemoteClusterSecurityRestIT extends AbstractRemoteClusterSecurityTe
                 { "foo": "bar" }
                 """));
             assertOK(performRequestAgainstFulfillingCluster(bulkRequest));
+//            ensureHealth(fulfillingClusterClient, "index_fulfilling", request -> {
+//                request.setOptions(request.getOptions().toBuilder().addHeader("Authorization", basicAuthHeaderValue(USER, PASS)));
+//                request.addParameter("wait_for_status", "green");
+//                request.addParameter("wait_for_no_relocating_shards", "true");
+//            });
         }
 
         // Create user role with privileges for remote and local indices
@@ -221,8 +230,10 @@ public class RemoteClusterSecurityRestIT extends AbstractRemoteClusterSecurityTe
         var deleteAsyncSearchRequest = new Request("DELETE", Strings.format("/_async_search/%s", asyncSearchId));
         deleteAsyncSearchRequest.setOptions(
                 RequestOptions.DEFAULT.toBuilder().addHeader("Authorization", headerFromRandomAuthMethod("userX", PASS))
+                .setRequestConfig(RequestConfig.custom().setSocketTimeout(Math.toIntExact(TimeValue.timeValueDays(10).millis())).build())
         );
-        Response deleteAsyncSearchResponse = client().performRequest(deleteAsyncSearchRequest);
+        Response deleteAsyncSearchResponse = client()
+                .performRequest(deleteAsyncSearchRequest);
         assertOK(deleteAsyncSearchResponse);
         {
             Response queryingClusterTasks = adminClient().performRequest(new Request("GET", "/_tasks"));
diff --git a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java
index 718602b7580..d0dcbd9cf1e 100644
--- a/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java
+++ b/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java
@@ -312,6 +312,8 @@ public class AuthorizationService {
                 return;
             }
 
+//            if (SystemUser.is(authentication.getEffectiveSubject().getUser()) ||
+//                SystemUser.isFromQueryingCluster(authentication.getEffectiveSubject())) {
             if (SystemUser.is(authentication.getEffectiveSubject().getUser())) {
                 // this never goes async so no need to wrap the listener
                 authorizeSystemUser(authentication, action, auditId, unwrappedRequest, listener);
