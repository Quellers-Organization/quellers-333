[#connectors-slack]
=== Elastic Slack connector reference
++++
<titleabbrev>Slack</titleabbrev>
++++
// Attributes used in this file
:service-name: Slack
:service-name-stub: slack

The Slack connector is written in Python using the {connectors-python}[Elastic connector framework^].

View the {connectors-python}/connectors/sources/{service-name-stub}.py[*source code* for this connector^] (branch _{connectors-branch}_, compatible with Elastic _{minor-version}_).

// //////// //// //// //// //// //// //// ////////
// //////// NATIVE CONNECTOR REFERENCE (MANAGED SERVICE) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#connectors-slack-native-connector-reference]
==== *Native connector reference (managed service)*

.View reference for the *native connector reference (managed service)*.
[%collapsible]
===============

[discrete#connectors-slack-availability]
===== Availability and prerequisites

This native connector was introduced in Elastic *8.14.0* as a managed service on Elastic Cloud.

To use this connector natively in Elastic Cloud, satisfy all <<native-connectors,native connector requirements>>.

[NOTE]
====
This connector is in **technical preview** and is subject to change.
The design and code is less mature than official GA features and is being provided as-is with no warranties.
Technical preview features are not subject to the support SLA of official GA features.
====

[discrete#connectors-slack-create-connector-native]
===== Create a {service-name} connector
include::_connectors-create-native.asciidoc[]

[discrete#connectors-slack-usage]
===== Usage

To use this connector in the UI, select the *Notion* tile when creating a new connector under *Search -> Connectors*.

If you're already familiar with how connectors work, you can also use the {ref}/connector-apis.html[Connector APIs].

For additional operations, see <<connectors-usage>>.

[NOTE]
====
You need to create a Slack application to authenticate with Slack.
====

[discrete#connectors-slack-app]
====== Create a Slack application

When created you'll receive a credential that the connector uses for authentication.
A new Bot user will also be created.

[TIP]
====
The connector will only sync messages from the channels of which the Bot user is a member.
====

To create the app, follow these steps:

1. Go to https://api.slack.com/apps and click "Create New App".
2. Choose "From Scratch".
3. Name the app, and select the workspace you want to sync from.
Depending on the workspace's settings, you may get a warning about requiring admin approval.
That will be handled later.
4. Navigate to "OAuth & Permissions" in the sidebar.
5. Scroll down to the "Scopes" section and add these scopes:
* `channels:history`
* `channels:read`
* `users:read`.
+
Optionally, you can also add `channels:join` if you want the App Bot to automatically be able to add itself to public channels.
6. Scroll up to "OAuth Tokens for Your Workspace" and install the application. Your workspace may require you to get administrator approval. If so, request approval now and return to the next step once it has been approved.
7. Copy and save the new "Bot User OAuth Token".
This credential will be used when configuring the connector.

[discrete#connectors-slack-configuration]
===== Configuration

The following settings are required to set up this connector:

`token`(required) ::
The Bot User OAuth Token generated by creating and installing your Slack App.

`fetch_last_n_days`(required) ::
The number of days of history to fetch from Slack.
This must be a positive number to fetch a subset of data, going back that many days.
If set to `0`, it will fetch all data since the beginning of the workspace.
The default is 180 days.

`auto_join_channels`(required) ::
Whether or not the connector should have the App's Bot User automatically invite itself into all public channels.
The connector will only sync messages from the channels of which the Bot user is a member.
By default, the bot will not invite itself to any channels, and must be manually invited to each channel that you wish to sync.
If this setting is enabled, your App must have the `channels.join` scope.

`sync_users`(required) ::

Whether or not the connector should index a document for each Slack user.
By default, the connector will create documents only for Channels and Messages.
However, regardless of the value of this setting, the Slack App does need the `users.read` scope and will make requests to enumerate all of the workspace's users.
This allows the messages to be enriched with human-readable usernames, and not rely on unreadable User UIDs.
Therefore, disabling this setting does not result in a speed improvement, but merely results in less overall storage in Elasticsearch.

[discrete#connectors-slack-sync-rules]
===== Sync rules

_Basic_ sync rules are identical for all connectors and are available by default.

Advanced sync rules are not available for this connector in the present version.

For more information read <<sync-rules-types>>.

[discrete#connectors-slack-content-extraction]
===== Content Extraction

This connector does not currently support processing Slack attachments or other binary files.

//See <<connectors-content-extraction>>.

[discrete#connectors-slack-documents-syncs]
===== Documents and syncs

The connector syncs the following objects and entities:

* *Channels*
* *Messages*
* *Users* (configurable)

[NOTE]
====
* Only public channels and messages from public channels are synced.
* No permissions are synced. **All documents** indexed to an Elastic deployment will be visible to **all users with access** to that Elastic Deployment.
====


[discrete#connectors-slack-known-issues]
===== Known issues

There are currently no known issues for this connector.
Refer to <<connectors-known-issues>> for a list of known issues for all connectors.

[discrete#connectors-slack-troubleshooting]
===== Troubleshooting

See <<connectors-troubleshooting>>.

[discrete#connectors-slack-security]
===== Security

See <<connectors-security>>.


// Closing the collapsible section 
===============


// //////// //// //// //// //// //// //// ////////
// //////// CONNECTOR CLIENT REFERENCE (SELF-MANAGED) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#connectors-slack-connector-client-reference]
==== *Connector client reference (self-managed)*

.View reference for the *connector client reference (self-managed)*.
[%collapsible]
===============

[discrete#connectors-slack-client-availability]
===== Availability and prerequisites

This connector is available as a self-managed *connector client* from the *Elastic connector framework*.

This connector client is compatible with Elastic versions *8.10.0+*.

To use this connector, satisfy all <<build-connector,connector client requirements>>.

[NOTE]
====
This connector is in **technical preview** and is subject to change.
The design and code is less mature than official GA features and is being provided as-is with no warranties.
Technical preview features are not subject to the support SLA of official GA features.
====

[discrete#connectors-slack-client-create-connector-client]
===== Create a {service-name} connector
include::_connectors-create-client.asciidoc[]

[discrete#connectors-slack-client-usage]
===== Usage

To use this connector as a **connector client**, use the *Connector* workflow in the Kibana UI.

For additional operations, see <<connectors-usage>>.

[NOTE]
====
You need to create a Slack application to authenticate with Slack.
====

[discrete#connectors-slack-client-app]
====== Create a Slack application

When created you'll receive a credential that the connector uses for authentication.
A new Bot user will also be created.

[TIP]
====
The connector will only sync messages from the channels of which the Bot user is a member.
====

To create the app, follow these steps:

1. Go to https://api.slack.com/apps and click "Create New App".
2. Choose "From Scratch".
3. Name the app, and select the workspace you want to sync from.
Depending on the workspace's settings, you may get a warning about requiring admin approval.
That will be handled later.
4. Navigate to "OAuth & Permissions" in the sidebar.
5. Scroll down to the "Scopes" section and add these scopes:
* `channels:history`
* `channels:read`
* `users:read`.
+
Optionally, you can also add `channels:join` if you want the App Bot to automatically be able to add itself to public channels.
6. Scroll up to "OAuth Tokens for Your Workspace" and install the application. Your workspace may require you to get administrator approval. If so, request approval now and return to the next step once it has been approved.
7. Copy and save the new "Bot User OAuth Token".
This credential will be used when configuring the connector.

[discrete#connectors-slack-client-docker]
===== Deploy with Docker

include::_connectors-docker-instructions.asciidoc[]

[discrete#connectors-slack-client-configuration]
===== Configuration

The following settings are required to set up this connector:

`token`(required) ::
The Bot User OAuth Token generated by creating and installing your Slack App.

`fetch_last_n_days`(required) ::
The number of days of history to fetch from Slack.
This must be a positive number to fetch a subset of data, going back that many days.
If set to `0`, it will fetch all data since the beginning of the workspace.
The default is 180 days.

`auto_join_channels`(required) ::
Whether or not the connector should have the App's Bot User automatically invite itself into all public channels.
The connector will only sync messages from the channels of which the Bot user is a member.
By default, the bot will not invite itself to any channels, and must be manually invited to each channel that you wish to sync.
If this setting is enabled, your App must have the `channels.join` scope.

`sync_users`(required) ::

Whether or not the connector should index a document for each Slack user.
By default, the connector will create documents only for Channels and Messages.
However, regardless of the value of this setting, the Slack App does need the `users.read` scope and will make requests to enumerate all of the workspace's users.
This allows the messages to be enriched with human-readable usernames, and not rely on unreadable User UIDs.
Therefore, disabling this setting does not result in a speed improvement, but merely results in less overall storage in Elasticsearch.

[discrete#connectors-slack-client-sync-rules]
===== Sync rules

_Basic_ sync rules are identical for all connectors and are available by default.

Advanced sync rules are not available for this connector in the present version.

For more information read <<sync-rules-types>>.

[discrete#connectors-slack-client-content-extraction]
===== Content Extraction

This connector does not currently support processing Slack attachments or other binary files.

//See <<connectors-content-extraction>>.

[discrete#connectors-slack-client-documents-syncs]
===== Documents and syncs

The connector syncs the following objects and entities:

* *Channels*
* *Messages*
* *Users* (configurably)

[NOTE]
====
* Only public channels and messages from public channels are synced.
* No permissions are synced. **All documents** indexed to an Elastic deployment will be visible to **all users with access** to that Elastic Deployment.
====

[discrete#connectors-slack-client-connector-client-operations]
===== Connector client operations

[discrete#connectors-slack-client-testing]
===== End-to-end testing

The connector framework enables operators to run functional tests against a real data source.
Refer to <<build-connector-testing>> for more details.

To perform E2E testing for the GitHub connector, run the following command:

[source,shell]
----
$ make ftest NAME=slack
----

For faster tests, add the `DATA_SIZE=small` flag:

[source,shell]
----
make ftest NAME=slack DATA_SIZE=small
----

[discrete#connectors-slack-client-known-issues]
===== Known issues

There are currently no known issues for this connector.
Refer to <<connectors-known-issues>> for a list of known issues for all connectors.

[discrete#connectors-slack-client-troubleshooting]
===== Troubleshooting

See <<connectors-troubleshooting>>.

[discrete#connectors-slack-client-security]
===== Security

See <<connectors-security>>.


// Closing the collapsible section 
===============
